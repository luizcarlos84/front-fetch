$theme-color = #ffc107
$negative-color = #dddddd
$back-color = #343a40

.progress-circle
  $size = 10rem
  background-color $negative-color
  border-radius 50%
  display inline-block
  height $size
  margin 0
  position relative
  width $size

  &:before
    align-items center
    background-color $back-color
    color $theme-color
    text-align center
    border-radius 50%
    content attr(data-progress) '%\A' attr(data-text) /* \A quebra a linha */
    white-space: pre; /* Realiza a quebra de texto*/
    display flex
    font-size 1.5rem
    justify-content center
    position absolute
    float right
    left 1rem
    right 1rem
    top  1rem
    bottom 1rem
    transition transform .2s ease

  &:after
    background-color $theme-color
    border-radius 50%
    content ''
    display inline-block
    height 100%
    width 100%

  &:hover
  &:focus
    &:before
      transform scale(.95)



/**
* $step is set to 5 by default, meaning you can only use percentage classes in
increments of five (e.g. 25, 30, 45, 50, and so on). This helps to reduce the
size of the final CSS file. If you need a number that doesn't end in 0 or 5, you
can change the text percentage while rounding the class up/down to the nearest 5.
*/

$step      = 1
$loops     = round(100 / $step)
$increment = 360 / $loops
$half      = round($loops / 2)

for $i in (0)..($loops)
  .progress-circle[data-progress={'"'+$i * $step+'"'}]:after
    if $i < $half
      $next-deg = 90deg + $increment * $i
      background-image linear-gradient(90deg, $negative-color 50%, transparent 50%, transparent), linear-gradient($next-deg, $theme-color 50%, $negative-color 50%, $negative-color)
    else
      $next-deg = -90deg + $increment * ($i - $half)
      background-image linear-gradient($next-deg, $theme-color 50%, transparent 50%, transparent), linear-gradient(270deg, $theme-color 50%, $negative-color 50%, $negative-color)
